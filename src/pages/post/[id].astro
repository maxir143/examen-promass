---
import { db, Posts, Users, eq } from "astro:db"
import Main from "../../layouts/main.astro"
import { parseShortDate } from "../../utils"
import { BotonEliminarPost, ChevronLeft } from "../../components"

const { id = "" } = Astro.params

const postId = parseInt(id)

// rectificar que el id sea un numero
if (Number.isNaN(postId)) {
  return Astro.redirect("/")
}
// buscar post
const post = await db
  .select()
  .from(Posts)
  .where(eq(Posts?.id, postId))
  .leftJoin(Users, eq(Posts.authorId, Users.id))
  .then(
    (res: any) =>
      res.map(({ Posts, Users }: { Posts: any; Users: any }) => ({
        ...Posts,
        author: Users?.name,
      }))?.[0]
  )
// si no se encuentra el post dirigir al usuario al inicio
if (!post) {
  return Astro.redirect("/", 404)
}
---

<Main>
  <section class="flex items-center justify-center min-w-full">
    <div class="max-w-[800px] flex flex-col flex-grow gap-6 p-5">
      <div class="flex flex-wrap-reverse justify-between gap-3">
        <h2 class="text-5xl">{post.title}</h2>
        <div class="flex gap-2 justify-end flex-grow">
          <BotonEliminarPost
            id={post.id}
            authorId={post.authorId}
            client:load
          />
          <a href="/" class="btn btn-sm dark:btn-outline">
            <ChevronLeft />
            {"Regresar"}</a
          >
        </div>
      </div>
      <div class="flex justify-between gap-3">
        <p>{post?.author ?? "an√≥nimo"}</p>
        <p>{parseShortDate(post.date)}</p>
      </div>
      <p>{post.content}</p>
    </div>
  </section>
</Main>
